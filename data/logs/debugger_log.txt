[14032] -> (C)  {"command":"initialize","arguments":{"clientID":"vscode","clientName":"Visual Studio Code","adapterID":"cheez","pathFormat":"path","linesStartAt1":true,"columnsStartAt1":true,"supportsVariableType":true,"supportsVariablePaging":true,"supportsRunInTerminalRequest":true,"locale":"en-us"},"type":"request","seq":1}
[14032] -> (C)  {
    "type": "request",
    "seq": 1,
    "arguments": {
        "supportsRunInTerminalRequest": true,
        "pathFormat": "path",
        "clientID": "vscode",
        "clientName": "Visual Studio Code",
        "supportsVariableType": true,
        "adapterID": "cheez",
        "linesStartAt1": true,
        "supportsVariablePaging": true,
        "columnsStartAt1": true,
        "locale": "en-us"
    },
    "command": "initialize"

}
[14032] <- (E)  {
    "type": "event",
    "seq": 0,
    "event": "initialized",
    "body": {
    }

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "supportsConfigurationDoneRequest": true,
        "supportsDisassembleRequest": true
    },
    "seq": 1,
    "request_seq": 1,
    "command": "initialize"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"setBreakpoints","arguments":{"source":{"name":"basic_cheez.che","path":"p:\\dev\\CheezLang\\data\\basic_cheez.che"},"lines":[49],"breakpoints":[{"line":49}],"sourceModified":false},"type":"request","seq":2}
[14032] -> (C)  {
    "type": "request",
    "seq": 2,
    "arguments": {
        "lines": [
            49
        ],
        "source": {
            "name": "basic_cheez.che",
            "path": "p:\\dev\\CheezLang\\data\\basic_cheez.che"
        },
        "breakpoints": [
            {
                "line": 49
            }
        ],
        "sourceModified": false
    },
    "command": "setBreakpoints"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
    },
    "seq": 2,
    "request_seq": 2,
    "command": "setBreakpoints"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"setBreakpoints","arguments":{"source":{"name":"CodeGeneratorHelpers.cs","path":"p:\\dev\\CheezLang\\Backends\\LLVM\\LLVMSharpBackend\\LLVM\\CodeGeneratorHelpers.cs"},"lines":[1516],"breakpoints":[{"line":1516}],"sourceModified":false},"type":"request","seq":3}
[14032] -> (C)  {
    "type": "request",
    "seq": 3,
    "arguments": {
        "lines": [
            1516
        ],
        "source": {
            "name": "CodeGeneratorHelpers.cs",
            "path": "p:\\dev\\CheezLang\\Backends\\LLVM\\LLVMSharpBackend\\LLVM\\CodeGeneratorHelpers.cs"
        },
        "breakpoints": [
            {
                "line": 1516
            }
        ],
        "sourceModified": false
    },
    "command": "setBreakpoints"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
    },
    "seq": 3,
    "request_seq": 3,
    "command": "setBreakpoints"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"setBreakpoints","arguments":{"source":{"name":"ExpressionGenerator.cs","path":"p:\\dev\\CheezLang\\Backends\\LLVM\\LLVMSharpBackend\\LLVM\\ExpressionGenerator.cs"},"lines":[252],"breakpoints":[{"line":252}],"sourceModified":false},"type":"request","seq":4}
[14032] -> (C)  {
    "type": "request",
    "seq": 4,
    "arguments": {
        "lines": [
            252
        ],
        "source": {
            "name": "ExpressionGenerator.cs",
            "path": "p:\\dev\\CheezLang\\Backends\\LLVM\\LLVMSharpBackend\\LLVM\\ExpressionGenerator.cs"
        },
        "breakpoints": [
            {
                "line": 252
            }
        ],
        "sourceModified": false
    },
    "command": "setBreakpoints"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
    },
    "seq": 4,
    "request_seq": 4,
    "command": "setBreakpoints"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"setBreakpoints","arguments":{"source":{"name":"Scope.cs","path":"p:\\dev\\CheezLang\\CompilerLibrary\\Scope.cs"},"lines":[69,788],"breakpoints":[{"line":69},{"line":788}],"sourceModified":false},"type":"request","seq":5}
[14032] -> (C)  {
    "type": "request",
    "seq": 5,
    "arguments": {
        "lines": [
            69,
            788
        ],
        "source": {
            "name": "Scope.cs",
            "path": "p:\\dev\\CheezLang\\CompilerLibrary\\Scope.cs"
        },
        "breakpoints": [
            {
                "line": 69
            },
            {
                "line": 788
            }
        ],
        "sourceModified": false
    },
    "command": "setBreakpoints"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
    },
    "seq": 5,
    "request_seq": 5,
    "command": "setBreakpoints"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"setBreakpoints","arguments":{"source":{"name":"TypeInference.cs","path":"p:\\dev\\CheezLang\\CompilerLibrary\\SemanticAnalysis\\TypeInference.cs"},"lines":[6282],"breakpoints":[{"line":6282}],"sourceModified":false},"type":"request","seq":6}
[14032] -> (C)  {
    "type": "request",
    "seq": 6,
    "arguments": {
        "lines": [
            6282
        ],
        "source": {
            "name": "TypeInference.cs",
            "path": "p:\\dev\\CheezLang\\CompilerLibrary\\SemanticAnalysis\\TypeInference.cs"
        },
        "breakpoints": [
            {
                "line": 6282
            }
        ],
        "sourceModified": false
    },
    "command": "setBreakpoints"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
    },
    "seq": 6,
    "request_seq": 6,
    "command": "setBreakpoints"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"launch","arguments":{"name":"Cheez Debugger","type":"cheez","request":"launch","program":"p:\\dev\\CheezLang\\data\\basic_cheez.che","args":[],"internalConsoleOptions":"openOnSessionStart","__sessionId":"297665b9-fa33-477c-b150-0acfbac019a3"},"type":"request","seq":7}
[14032] -> (C)  {
    "type": "request",
    "seq": 7,
    "arguments": {
        "type": "cheez",
        "internalConsoleOptions": "openOnSessionStart",
        "program": "p:\\dev\\CheezLang\\data\\basic_cheez.che",
        "name": "Cheez Debugger",
        "request": "launch",
        "args": [
        ],
        "__sessionId": "297665b9-fa33-477c-b150-0acfbac019a3"
    },
    "command": "launch"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
    },
    "seq": 7,
    "request_seq": 7,
    "command": "launch"

}
[14032]  ===================================================
[19408]  [19408] [LoadFileJob 'p:\dev\CheezLang\data\basic_cheez.che'] Begin loading
[19408]  AstConstDecl #10 (48:1->51)
  AstIdentifier #1 'Main' (48:1->48)
  AstFunction #9 (48:9->51)
    params:
    body:
      AstBlock #2 (48:12->51)
        AstDecl #5 (49:5->49)
          AstIdentifier #3 'x' (49:5->49)
          AstBool #4 true (49:10->49)
        AstDecl #8 (50:5->50)
          AstIdentifier #6 'y' (50:5->50)
          AstNumberLiteral #7 5 (50:10->50)

[19408]  Main :: () {
    x := true
    y := 5
}
[19408]  [19408] [LoadFileJob 'p:\dev\CheezLang\data\basic_cheez.che'] Done
[19408]  [19408] [CompileGlobalNode #10] Begin compilation
[19408]  [19408] [CompileGlobalNode #10] compile_function 'Main': Begin
[19408]  [19408] [CompileGlobalNode #10] compile_function 'Main': Compile Body
[19408]  [19408] [CompileGlobalNode #10] compile_function 'Main': Generate Bytecode
[19408]  type_size: 1
[19408]  type_size: 8
[19408]  [19408] [CompileGlobalNode #10] compile_function 'Main': Call Main
[19408]  push_frame 0 (fp = -1 -> 0, sp = 0 -> 0, local_slots = 2)
[19408] <- (E)  {
    "type": "event",
    "seq": 10,
    "event": "stopped",
    "body": {
        "threadId": 0,
        "reason": "breakpoint"
    }

}
[14032] -> (C)  {"command":"stackTrace","arguments":{"threadId":0,"levels":1,"startFrame":0},"type":"request","seq":8}
[14032] -> (C)  {
    "type": "request",
    "seq": 8,
    "arguments": {
        "startFrame": 0,
        "threadId": 0,
        "levels": 1
    },
    "command": "stackTrace"

}
[14032]  stackframe: line: 49, func: 'Main', path: 'p:\dev\CheezLang\data\basic_cheez.che'
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "stackFrames": [
            {
                "column": 5,
                "id": 0,
                "name": "Main",
                "source": {
                    "name": "fac.cbc",
                    "path": "p:\\dev\\CheezLang\\data\\basic_cheez.che"
                },
                "line": 49
            }
        ]
    },
    "seq": 8,
    "request_seq": 8,
    "command": "stackTrace"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"threads","type":"request","seq":9}
[14032] -> (C)  {
    "type": "request",
    "seq": 9,
    "command": "threads"

}
[14032]  request threads
[14032]  [DapThread(id = 0, name = Main Thread)]
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "threads": [
            {
                "id": 0,
                "name": "Main Thread"
            }
        ]
    },
    "seq": 9,
    "request_seq": 9,
    "command": "threads"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"stackTrace","arguments":{"threadId":0,"startFrame":0,"levels":20},"type":"request","seq":10}
[14032] -> (C)  {
    "type": "request",
    "seq": 10,
    "arguments": {
        "startFrame": 0,
        "threadId": 0,
        "levels": 20
    },
    "command": "stackTrace"

}
[14032]  stackframe: line: 49, func: 'Main', path: 'p:\dev\CheezLang\data\basic_cheez.che'
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "stackFrames": [
            {
                "column": 5,
                "id": 0,
                "name": "Main",
                "source": {
                    "name": "fac.cbc",
                    "path": "p:\\dev\\CheezLang\\data\\basic_cheez.che"
                },
                "line": 49
            }
        ]
    },
    "seq": 10,
    "request_seq": 10,
    "command": "stackTrace"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"scopes","arguments":{"frameId":0},"type":"request","seq":11}
[14032] -> (C)  {
    "type": "request",
    "seq": 11,
    "arguments": {
        "frameId": 0
    },
    "command": "scopes"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "scopes": [
            {
                "name": "Locals",
                "variablesReference": 1,
                "presentationHint": "locals"
            },
            {
                "name": "Arguments",
                "variablesReference": 2,
                "presentationHint": "arguments"
            },
            {
                "name": "Registers",
                "variablesReference": 3,
                "presentationHint": "registers"
            }
        ]
    },
    "seq": 11,
    "request_seq": 11,
    "command": "scopes"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"variables","arguments":{"variablesReference":1},"type":"request","seq":12}
[14032] -> (C)  {
    "type": "request",
    "seq": 12,
    "arguments": {
        "variablesReference": 1
    },
    "command": "variables"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "variables": [
            {
                "name": "x",
                "value": "0",
                "variablesReference": 0
            },
            {
                "name": "y",
                "value": "0",
                "variablesReference": 0
            }
        ]
    },
    "seq": 12,
    "request_seq": 12,
    "command": "variables"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"variables","arguments":{"variablesReference":2},"type":"request","seq":13}
[14032] -> (C)  {
    "type": "request",
    "seq": 13,
    "arguments": {
        "variablesReference": 2
    },
    "command": "variables"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "variables": [
        ]
    },
    "seq": 13,
    "request_seq": 13,
    "command": "variables"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"variables","arguments":{"variablesReference":3},"type":"request","seq":14}
[14032] -> (C)  {
    "type": "request",
    "seq": 14,
    "arguments": {
        "variablesReference": 3
    },
    "command": "variables"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "variables": [
            {
                "name": "ip",
                "value": "0",
                "variablesReference": 0
            },
            {
                "name": "sp",
                "value": "2",
                "variablesReference": 0
            },
            {
                "name": "bp",
                "value": "0",
                "variablesReference": 0
            }
        ]
    },
    "seq": 14,
    "request_seq": 14,
    "command": "variables"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"next","arguments":{"threadId":0},"type":"request","seq":15}
[14032] -> (C)  {
    "type": "request",
    "seq": 15,
    "arguments": {
        "threadId": 0
    },
    "command": "next"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
    },
    "seq": 15,
    "request_seq": 15,
    "command": "next"

}
[19408] stdout 49    0    2     0       Noop                [  | 0, 0 ]
[14032]  ===================================================
[19408] stdout 49    0    2     1       Const 1             [  | 0, 0 ]
[19408] stdout 49    0    3     3       StoreLocal 0        [  | 0, 0, 1 ]
[19408] <- (E)  {
    "type": "event",
    "seq": 11,
    "event": "stopped",
    "body": {
        "threadId": 0,
        "reason": "step"
    }

}
[14032] -> (C)  {"command":"stackTrace","arguments":{"threadId":0,"levels":1,"startFrame":0},"type":"request","seq":16}
[14032] -> (C)  {
    "type": "request",
    "seq": 16,
    "arguments": {
        "startFrame": 0,
        "threadId": 0,
        "levels": 1
    },
    "command": "stackTrace"

}
[14032]  stackframe: line: 50, func: 'Main', path: 'p:\dev\CheezLang\data\basic_cheez.che'
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "stackFrames": [
            {
                "column": 5,
                "id": 0,
                "name": "Main",
                "source": {
                    "name": "fac.cbc",
                    "path": "p:\\dev\\CheezLang\\data\\basic_cheez.che"
                },
                "line": 50
            }
        ]
    },
    "seq": 16,
    "request_seq": 16,
    "command": "stackTrace"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"threads","type":"request","seq":17}
[14032] -> (C)  {
    "type": "request",
    "seq": 17,
    "command": "threads"

}
[14032]  request threads
[14032]  [DapThread(id = 0, name = Main Thread)]
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "threads": [
            {
                "id": 0,
                "name": "Main Thread"
            }
        ]
    },
    "seq": 17,
    "request_seq": 17,
    "command": "threads"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"stackTrace","arguments":{"threadId":0,"startFrame":0,"levels":20},"type":"request","seq":18}
[14032] -> (C)  {
    "type": "request",
    "seq": 18,
    "arguments": {
        "startFrame": 0,
        "threadId": 0,
        "levels": 20
    },
    "command": "stackTrace"

}
[14032]  stackframe: line: 50, func: 'Main', path: 'p:\dev\CheezLang\data\basic_cheez.che'
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "stackFrames": [
            {
                "column": 5,
                "id": 0,
                "name": "Main",
                "source": {
                    "name": "fac.cbc",
                    "path": "p:\\dev\\CheezLang\\data\\basic_cheez.che"
                },
                "line": 50
            }
        ]
    },
    "seq": 18,
    "request_seq": 18,
    "command": "stackTrace"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"scopes","arguments":{"frameId":0},"type":"request","seq":19}
[14032] -> (C)  {
    "type": "request",
    "seq": 19,
    "arguments": {
        "frameId": 0
    },
    "command": "scopes"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "scopes": [
            {
                "name": "Locals",
                "variablesReference": 1,
                "presentationHint": "locals"
            },
            {
                "name": "Arguments",
                "variablesReference": 2,
                "presentationHint": "arguments"
            },
            {
                "name": "Registers",
                "variablesReference": 3,
                "presentationHint": "registers"
            }
        ]
    },
    "seq": 19,
    "request_seq": 19,
    "command": "scopes"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"variables","arguments":{"variablesReference":1},"type":"request","seq":20}
[14032] -> (C)  {
    "type": "request",
    "seq": 20,
    "arguments": {
        "variablesReference": 1
    },
    "command": "variables"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "variables": [
            {
                "name": "x",
                "value": "1",
                "variablesReference": 0
            },
            {
                "name": "y",
                "value": "0",
                "variablesReference": 0
            }
        ]
    },
    "seq": 20,
    "request_seq": 20,
    "command": "variables"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"variables","arguments":{"variablesReference":2},"type":"request","seq":21}
[14032] -> (C)  {
    "type": "request",
    "seq": 21,
    "arguments": {
        "variablesReference": 2
    },
    "command": "variables"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "variables": [
        ]
    },
    "seq": 21,
    "request_seq": 21,
    "command": "variables"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"variables","arguments":{"variablesReference":3},"type":"request","seq":22}
[14032] -> (C)  {
    "type": "request",
    "seq": 22,
    "arguments": {
        "variablesReference": 3
    },
    "command": "variables"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "variables": [
            {
                "name": "ip",
                "value": "5",
                "variablesReference": 0
            },
            {
                "name": "sp",
                "value": "2",
                "variablesReference": 0
            },
            {
                "name": "bp",
                "value": "0",
                "variablesReference": 0
            }
        ]
    },
    "seq": 22,
    "request_seq": 22,
    "command": "variables"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"next","arguments":{"threadId":0},"type":"request","seq":23}
[14032] -> (C)  {
    "type": "request",
    "seq": 23,
    "arguments": {
        "threadId": 0
    },
    "command": "next"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
    },
    "seq": 23,
    "request_seq": 23,
    "command": "next"

}
[14032]  ===================================================
[19408] stdout 50    0    2     5       Noop                [  | 1, 0 ]
[19408] stdout 50    0    2     6       Const 5             [  | 1, 0 ]
[19408] stdout 50    0    3     8       StoreLocal 1        [  | 1, 0, 5 ]
[19408] <- (E)  {
    "type": "event",
    "seq": 12,
    "event": "stopped",
    "body": {
        "threadId": 0,
        "reason": "step"
    }

}
[14032] -> (C)  {"command":"stackTrace","arguments":{"threadId":0,"levels":1,"startFrame":0},"type":"request","seq":24}
[14032] -> (C)  {
    "type": "request",
    "seq": 24,
    "arguments": {
        "startFrame": 0,
        "threadId": 0,
        "levels": 1
    },
    "command": "stackTrace"

}
[14032]  stackframe: line: 51, func: 'Main', path: 'p:\dev\CheezLang\data\basic_cheez.che'
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "stackFrames": [
            {
                "column": 5,
                "id": 0,
                "name": "Main",
                "source": {
                    "name": "fac.cbc",
                    "path": "p:\\dev\\CheezLang\\data\\basic_cheez.che"
                },
                "line": 51
            }
        ]
    },
    "seq": 24,
    "request_seq": 24,
    "command": "stackTrace"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"threads","type":"request","seq":25}
[14032] -> (C)  {
    "type": "request",
    "seq": 25,
    "command": "threads"

}
[14032]  request threads
[14032]  [DapThread(id = 0, name = Main Thread)]
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "threads": [
            {
                "id": 0,
                "name": "Main Thread"
            }
        ]
    },
    "seq": 25,
    "request_seq": 25,
    "command": "threads"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"stackTrace","arguments":{"threadId":0,"startFrame":0,"levels":20},"type":"request","seq":26}
[14032] -> (C)  {
    "type": "request",
    "seq": 26,
    "arguments": {
        "startFrame": 0,
        "threadId": 0,
        "levels": 20
    },
    "command": "stackTrace"

}
[14032]  stackframe: line: 51, func: 'Main', path: 'p:\dev\CheezLang\data\basic_cheez.che'
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "stackFrames": [
            {
                "column": 5,
                "id": 0,
                "name": "Main",
                "source": {
                    "name": "fac.cbc",
                    "path": "p:\\dev\\CheezLang\\data\\basic_cheez.che"
                },
                "line": 51
            }
        ]
    },
    "seq": 26,
    "request_seq": 26,
    "command": "stackTrace"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"scopes","arguments":{"frameId":0},"type":"request","seq":27}
[14032] -> (C)  {
    "type": "request",
    "seq": 27,
    "arguments": {
        "frameId": 0
    },
    "command": "scopes"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "scopes": [
            {
                "name": "Locals",
                "variablesReference": 1,
                "presentationHint": "locals"
            },
            {
                "name": "Arguments",
                "variablesReference": 2,
                "presentationHint": "arguments"
            },
            {
                "name": "Registers",
                "variablesReference": 3,
                "presentationHint": "registers"
            }
        ]
    },
    "seq": 27,
    "request_seq": 27,
    "command": "scopes"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"variables","arguments":{"variablesReference":1},"type":"request","seq":28}
[14032] -> (C)  {
    "type": "request",
    "seq": 28,
    "arguments": {
        "variablesReference": 1
    },
    "command": "variables"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "variables": [
            {
                "name": "x",
                "value": "1",
                "variablesReference": 0
            },
            {
                "name": "y",
                "value": "5",
                "variablesReference": 0
            }
        ]
    },
    "seq": 28,
    "request_seq": 28,
    "command": "variables"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"variables","arguments":{"variablesReference":2},"type":"request","seq":29}
[14032] -> (C)  {
    "type": "request",
    "seq": 29,
    "arguments": {
        "variablesReference": 2
    },
    "command": "variables"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "variables": [
        ]
    },
    "seq": 29,
    "request_seq": 29,
    "command": "variables"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"variables","arguments":{"variablesReference":3},"type":"request","seq":30}
[14032] -> (C)  {
    "type": "request",
    "seq": 30,
    "arguments": {
        "variablesReference": 3
    },
    "command": "variables"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "variables": [
            {
                "name": "ip",
                "value": "10",
                "variablesReference": 0
            },
            {
                "name": "sp",
                "value": "2",
                "variablesReference": 0
            },
            {
                "name": "bp",
                "value": "0",
                "variablesReference": 0
            }
        ]
    },
    "seq": 30,
    "request_seq": 30,
    "command": "variables"

}
[14032]  ===================================================
[14032] -> (C)  {"command":"next","arguments":{"threadId":0},"type":"request","seq":31}
[14032] -> (C)  {
    "type": "request",
    "seq": 31,
    "arguments": {
        "threadId": 0
    },
    "command": "next"

}
[19408] stdout 51    0    2     10      ReturnVoid          [  | 1, 5 ]
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
    },
    "seq": 31,
    "request_seq": 31,
    "command": "next"

}
[19408]  pop_frame (fp = 0 -> -1, sp = 0 -> 0)
[14032]  ===================================================
[19408] <- (E)  {
    "type": "event",
    "seq": 13,
    "event": "terminated",
    "body": {
    }

}
[19408]  [19408] [CompileGlobalNode #10] compile_function 'Main': End
[19408]  [19408] [CompileGlobalNode #10] Done
[14032] -> (C)  {"command":"disconnect","arguments":{"restart":false},"type":"request","seq":32}
[14032] -> (C)  {
    "type": "request",
    "seq": 32,
    "arguments": {
        "restart": false
    },
    "command": "disconnect"

}
[14032] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
    },
    "seq": 32,
    "request_seq": 32,
    "command": "disconnect"

}
[14032]  ===================================================
