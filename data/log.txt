[3356] -> (C)  {"command":"initialize","arguments":{"clientID":"vscode","clientName":"Visual Studio Code","adapterID":"cheezbc","pathFormat":"path","linesStartAt1":true,"columnsStartAt1":true,"supportsVariableType":true,"supportsVariablePaging":true,"supportsRunInTerminalRequest":true,"locale":"en-us"},"type":"request","seq":1}
[3356] -> (C)  {
    "type": "request",
    "seq": 1,
    "arguments": {
        "supportsRunInTerminalRequest": true,
        "pathFormat": "path",
        "clientID": "vscode",
        "clientName": "Visual Studio Code",
        "supportsVariableType": true,
        "adapterID": "cheezbc",
        "linesStartAt1": true,
        "supportsVariablePaging": true,
        "columnsStartAt1": true,
        "locale": "en-us"
    },
    "command": "initialize"

}
[3356] <- (E)  {
    "type": "event",
    "seq": 0,
    "event": "initialized",
    "body": {
    }

}
[3356] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
    },
    "seq": 1,
    "request_seq": 1,
    "command": "initialize"

}
[3356]  ===================================================
[3356] -> (C)  {"command":"setBreakpoints","arguments":{"source":{"name":"swap.cbc","path":"p:\\dev\\debug_adapter_test\\swap.cbc"},"lines":[25],"breakpoints":[{"line":25}],"sourceModified":false},"type":"request","seq":2}
[3356] -> (C)  {
    "type": "request",
    "seq": 2,
    "arguments": {
        "lines": [
            25
        ],
        "source": {
            "name": "swap.cbc",
            "path": "p:\\dev\\debug_adapter_test\\swap.cbc"
        },
        "breakpoints": [
            {
                "line": 25
            }
        ],
        "sourceModified": false
    },
    "command": "setBreakpoints"

}
[3356] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
    },
    "seq": 2,
    "request_seq": 2,
    "command": "setBreakpoints"

}
[3356]  ===================================================
[3356] -> (C)  {"command":"launch","arguments":{"name":"cheez bitcode test","type":"cheezbc","request":"launch","program":"p:\\dev\\debug_adapter_test\\swap.cbc","args":["123"],"internalConsoleOptions":"openOnSessionStart","__sessionId":"a86c388a-c368-4bdd-8a63-78f66d0ad45f"},"type":"request","seq":3}
[3356] -> (C)  {
    "type": "request",
    "seq": 3,
    "arguments": {
        "type": "cheezbc",
        "internalConsoleOptions": "openOnSessionStart",
        "program": "p:\\dev\\debug_adapter_test\\swap.cbc",
        "name": "cheez bitcode test",
        "request": "launch",
        "args": [
            "123"
        ],
        "__sessionId": "a86c388a-c368-4bdd-8a63-78f66d0ad45f"
    },
    "command": "launch"

}
[3356] <- (E)  {
    "type": "event",
    "seq": 3,
    "event": "stopped",
    "body": {
        "threadId": 0,
        "reason": "breakpoint"
    }

}
[3356] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
    },
    "seq": 4,
    "request_seq": 3,
    "command": "launch"

}
[3356]  ===================================================
[3356] -> (C)  {"command":"stackTrace","arguments":{"threadId":0,"levels":1,"startFrame":0},"type":"request","seq":4}
[3356] -> (C)  {
    "type": "request",
    "seq": 4,
    "arguments": {
        "startFrame": 0,
        "threadId": 0,
        "levels": 1
    },
    "command": "stackTrace"

}
[3356]  stackframe: line: 24, func: 'main', path: 'p:\\dev\\debug_adapter_test\\swap.cbc'
[3356] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "stackFrames": [
            {
                "column": 5,
                "id": 0,
                "name": "main",
                "source": {
                    "name": "fac.cbc",
                    "path": "p:\\dev\\debug_adapter_test\\swap.cbc"
                },
                "line": 25
            }
        ]
    },
    "seq": 5,
    "request_seq": 4,
    "command": "stackTrace"

}
[3356]  ===================================================
[3356] -> (C)  {"command":"threads","type":"request","seq":5}
[3356] -> (C)  {
    "type": "request",
    "seq": 5,
    "command": "threads"

}
[3356]  request threads
[3356]  [DapThread(id = 0, name = Main Thread)]
[3356] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "threads": [
            {
                "id": 0,
                "name": "Main Thread"
            }
        ]
    },
    "seq": 6,
    "request_seq": 5,
    "command": "threads"

}
[3356]  ===================================================
[3356] -> (C)  {"command":"stackTrace","arguments":{"threadId":0,"startFrame":0,"levels":20},"type":"request","seq":6}
[3356] -> (C)  {
    "type": "request",
    "seq": 6,
    "arguments": {
        "startFrame": 0,
        "threadId": 0,
        "levels": 20
    },
    "command": "stackTrace"

}
[3356]  stackframe: line: 24, func: 'main', path: 'p:\\dev\\debug_adapter_test\\swap.cbc'
[3356] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "stackFrames": [
            {
                "column": 5,
                "id": 0,
                "name": "main",
                "source": {
                    "name": "fac.cbc",
                    "path": "p:\\dev\\debug_adapter_test\\swap.cbc"
                },
                "line": 25
            }
        ]
    },
    "seq": 7,
    "request_seq": 6,
    "command": "stackTrace"

}
[3356]  ===================================================
[3356] -> (C)  {"command":"scopes","arguments":{"frameId":0},"type":"request","seq":7}
[3356] -> (C)  {
    "type": "request",
    "seq": 7,
    "arguments": {
        "frameId": 0
    },
    "command": "scopes"

}
[3356] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "scopes": [
            {
                "name": "Locals",
                "variablesReference": 1,
                "presentationHint": "locals"
            },
            {
                "name": "Arguments",
                "variablesReference": 2,
                "presentationHint": "arguments"
            },
            {
                "name": "Registers",
                "variablesReference": 3,
                "presentationHint": "registers"
            }
        ]
    },
    "seq": 8,
    "request_seq": 7,
    "command": "scopes"

}
[3356]  ===================================================
[3356] -> (C)  {"command":"variables","arguments":{"variablesReference":1},"type":"request","seq":8}
[3356] -> (C)  {
    "type": "request",
    "seq": 8,
    "arguments": {
        "variablesReference": 1
    },
    "command": "variables"

}
[3356] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
        "variables": [
            {
                "name": "t1",
                "value": "0",
                "variablesReference": 0
            },
            {
                "name": "t2",
                "value": "0",
                "variablesReference": 0
            }
        ]
    },
    "seq": 9,
    "request_seq": 8,
    "command": "variables"

}
[3356]  ===================================================
[3356] -> (C)  {"command":"continue","arguments":{"threadId":0},"type":"request","seq":9}
[3356] -> (C)  {
    "type": "request",
    "seq": 9,
    "arguments": {
        "threadId": 0
    },
    "command": "continue"

}
[3356] <- (R)  {
    "type": "response",
    "success": true,
    "body": {
    },
    "seq": 10,
    "request_seq": 9,
    "command": "continue"

}
[12232] <- (E)  {
    "type": "event",
    "seq": 11,
    "event": "output",
    "body": {
        "output": "123\n",
        "category": "console"
    }

}
[3356]  ===================================================
[12232] <- (E)  {
    "type": "event",
    "seq": 12,
    "event": "output",
    "body": {
        "output": "456\n",
        "category": "console"
    }

}
[12232] <- (E)  {
    "type": "event",
    "seq": 13,
    "event": "output",
    "body": {
        "output": "456\n",
        "category": "console"
    }

}
[12232] <- (E)  {
    "type": "event",
    "seq": 14,
    "event": "output",
    "body": {
        "output": "123\n",
        "category": "console"
    }

}
[12232] <- (E)  {
    "type": "event",
    "seq": 15,
    "event": "terminated",
    "body": {
    }

}
[3356] -> (C)  {"command":"disconnect","arguments":{"restart":false},"type":"request","seq":10}
[3356] -> (C)  {
    "type": "request",
    "seq": 10,
    "arguments": {
        "restart": false
    },
    "command": "disconnect"

}
[3356] <- (R)  {
    "type": "response",
    "success": false,
    "message": "Failed to handle command 'disconnect'",
    "seq": 16,
    "request_seq": 10,
    "command": "disconnect"

}
[3356]  ===================================================
