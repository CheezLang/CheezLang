- labeled block + break from block
    + add label to block
    + break from block
    + defer working
    - test nesting in blocks and loops
- immutable/mutable variables
- public/private struct members
- number constants as polymorphic parameters
- loop as expression with value (provided by break)
- polymorphic constraints (e.g. $T/Printable)
- properly implement lambdas

- improve error messages when type of const argument doesn't match type of const parameter (location shown is from param)
- return in match as expression

- auto generate Drop implementation for enums if any variant has a value that implements drop
- call drop for temp values
- call destructors in correct order
- generate default destructors for structs
