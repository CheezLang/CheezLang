// cant use reference in match when matching in a tuple

enum Foo {
    A
    B
}

fn Main() {
    a := Foo.A
    b := ref a

    // compiles
    match b {
        Foo.A -> {}
    }

    // doesnt compile
    /*
D:\Programming\CheezLang\CompilerLibrary\SemanticAnalysis\TypeInference.cs:655 - MatchPatternWithType()
D:\Programming\CheezLang\examples\bugs\bug2.che:27:10: Can't match type ref Foo to pattern Foo.A
26>     match (b, Foo.B) {
27>         (Foo.A, Foo.B) -> {}
             ^————
28>     }
     */
    match (b, Foo.B) {
        (Foo.A, Foo.B) -> {}
    }
}