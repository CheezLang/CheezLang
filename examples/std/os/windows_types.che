typedef DWORD           = u32
typedef HANDLE          = &any
typedef HWND            = HANDLE
typedef HINSTANCE       = HANDLE
typedef HMODULE         = HANDLE
typedef HICON           = HANDLE
typedef HMENU           = HANDLE
typedef HDC             = HANDLE
typedef HGLRC           = HANDLE
typedef HCURSOR         = HICON
typedef HBRUSH          = HANDLE
typedef HFILE           = i32
typedef BOOL            = i32
typedef UINT            = u32
typedef LONG            = i32
typedef LONGLONG        = i64
typedef LARGE_INTEGER   = LONGLONG
typedef UINT_PTR        = u64
typedef LONG_PTR        = i64
typedef WPARAM          = UINT_PTR
typedef LPARAM          = LONG_PTR
typedef LRESULT         = LONG_PTR
typedef ATOM            = u16
typedef WNDCLASS        = WNDCLASSA
typedef UCHAR           = u8
typedef BYTE            = u8
typedef WORD            = u16
typedef SIZE_T          = u64
typedef THREAD_START_ROUTINE = fn(&any) -> DWORD #stdcall
typedef WAITORTIMERCALLBACK = fn(&any, bool) #stdcall

struct POINT {
    pub x: i32
    pub y: i32
}

struct MSG {
    pub hwnd        : HWND
    pub message     : UINT
    pub wParam      : WPARAM
    pub lParam      : LPARAM
    pub time        : DWORD
    pub pt          : POINT
    pub lPrivate    : DWORD
}

struct RECT {
    pub left    : i32
    pub top     : i32
    pub right   : i32
    pub bottom  : i32
}

struct WNDCLASSA {
    pub style           : UINT
    pub lpfnWndProc     : fn(HWND, UINT, WPARAM, LPARAM) -> LRESULT
    pub cbClsExtra      : i32
    pub cbWndExtra      : i32
    pub hInstance       : HINSTANCE
    pub hIcon           : HICON
    pub hCursor         : HCURSOR
    pub hbrBackground   : HBRUSH
    pub lpszMenuName    : c_string
    pub lpszClassName   : c_string
}


struct MINMAXINFO {
    pub ptReserved      : POINT
    pub ptMaxSize       : POINT
    pub ptMaxPosition   : POINT
    pub ptMinTrackSize  : POINT
    pub ptMaxTrackSize  : POINT
}

// struct COPYDATASTRUCT {
//     ULONG_PTR dwData;
//     DWORD cbData;
//     _Field_size_bytes_(cbData) PVOID lpData;
// } 

struct MDINEXTMENU {
    pub hmenuIn     : HMENU
    pub hmenuNext   : HMENU
    pub hwndNext    : HWND
}

struct GUID {
    pub Data1   : DWORD
    pub Data2   : WORD
    pub Data3   : WORD
    pub Data4   : [8]BYTE
}


struct POWERBROADCAST_SETTING {
    pub PowerSetting    : GUID
    pub DataLength      : DWORD
    pub Data            : [1]UCHAR
}

struct CREATESTRUCTA {
    pub lpCreateParams  : &any
    pub hInstance       : HINSTANCE
    pub hMenu           : HMENU
    pub hwndParent      : HWND
    pub cy              : i32
    pub cx              : i32
    pub y               : i32
    pub x               : i32
    pub style           : LONG
    pub lpszName        : c_string
    pub lpszClass       : c_string
    pub dwExStyle       : DWORD
}

struct PIXELFORMATDESCRIPTOR {
    pub nSize           : WORD
    pub nVersion        : WORD
    pub dwFlags         : DWORD
    pub iPixelType      : BYTE
    pub cColorBits      : BYTE
    pub cRedBits        : BYTE
    pub cRedShift       : BYTE
    pub cGreenBits      : BYTE
    pub cGreenShift     : BYTE
    pub cBlueBits       : BYTE
    pub cBlueShift      : BYTE
    pub cAlphaBits      : BYTE
    pub cAlphaShift     : BYTE
    pub cAccumBits      : BYTE
    pub cAccumRedBits   : BYTE
    pub cAccumGreenBits : BYTE
    pub cAccumBlueBits  : BYTE
    pub cAccumAlphaBits : BYTE
    pub cDepthBits      : BYTE
    pub cStencilBits    : BYTE
    pub cAuxBuffers     : BYTE
    pub iLayerType      : BYTE
    pub bReserved       : BYTE
    pub dwLayerMask     : DWORD
    pub dwVisibleMask   : DWORD
    pub dwDamageMask    : DWORD
}

struct SECURITY_ATTRIBUTES {
  pub nLength               : DWORD
  pub lpSecurityDescriptor  : &any
  pub bInheritHandle        : BOOL
}


// #define UNICODE_NOCHAR                  0xFFFF

// #define NFR_ANSI                             1
// #define NFR_UNICODE                          2
// #define NF_QUERY                             3
// #define NF_REQUERY                           4

// #define PWR_OK              1
// #define PWR_FAIL            (-1)
// #define PWR_SUSPENDREQUEST  1
// #define PWR_SUSPENDRESUME   2
// #define PWR_CRITICALRESUME  3

// #define     WA_INACTIVE     0
// #define     WA_ACTIVE       1
// #define     WA_CLICKACTIVE  2

// #define DM_POINTERHITTEST               0x0250

// #define PBT_APMQUERYSUSPEND             0x0000
// #define PBT_APMQUERYSTANDBY             0x0001
// #define PBT_APMQUERYSUSPENDFAILED       0x0002
// #define PBT_APMQUERYSTANDBYFAILED       0x0003
// #define PBT_APMSUSPEND                  0x0004
// #define PBT_APMSTANDBY                  0x0005
// #define PBT_APMRESUMECRITICAL           0x0006
// #define PBT_APMRESUMESUSPEND            0x0007
// #define PBT_APMRESUMESTANDBY            0x0008
// #define PBTF_APMRESUMEFROMFAILURE       0x00000001
// #define PBT_APMBATTERYLOW               0x0009
// #define PBT_APMPOWERSTATUSCHANGE        0x000A
// #define PBT_APMOEMEVENT                 0x000B
// #define PBT_APMRESUMEAUTOMATIC          0x0012
// #define PBT_POWERSETTINGCHANGE          0x8013

// #define UIS_SET                         1
// #define UIS_CLEAR                       2
// #define UIS_INITIALIZE                  3
// #define UISF_HIDEFOCUS                  0x1
// #define UISF_HIDEACCEL                  0x2
// #define UISF_ACTIVE                     0x4

// #define WHEEL_DELTA                     120
// #define GET_WHEEL_DELTA_WPARAM(wParam)  ((short)HIWORD(wParam))
// #define WHEEL_PAGESCROLL                (UINT_MAX)
// #define GET_KEYSTATE_WPARAM(wParam)     (LOWORD(wParam))
// #define GET_NCHITTEST_WPARAM(wParam)    ((short)LOWORD(wParam))
// #define GET_XBUTTON_WPARAM(wParam)      (HIWORD(wParam))
// #define XBUTTON1      0x0001
// #define XBUTTON2      0x0002
