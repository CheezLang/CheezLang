#load("windows_types")

fn GetLastError() -> DWORD #stdcall;

fn GetStdHandle(nStdHandle: DWORD) -> HANDLE #stdcall;
fn WriteFile(hFile: HANDLE, lpBuffer: &any, nNumberOfBytesToWrite: DWORD, lpNumberOfBytesWritten: &DWORD, lpOverlapped: &any) -> BOOL #stdcall;
fn ReadFile(hFile: HANDLE, lpBuffer: &any, nNumberOfBytesToRead: DWORD, lpNumberOfBytesRead: &DWORD, lpOverlapped: &any) -> BOOL #stdcall;

fn CreateFileA(lpFileName: c_string, dwDesiredAccess: DWORD, dwShareMode: DWORD, lpSecurityAttributes: &any, dwCreationDisposition: DWORD, dwFlagsAndAttributes: DWORD, hTemplateFile: HANDLE) -> HANDLE #stdcall;
fn CloseHandle(hObject: HANDLE) -> BOOL #stdcall;
fn GetFileSize(hFile: HANDLE, lpFileSizeHigh: &DWORD) -> DWORD #stdcall;
fn GetFileSizeEx(hFile: HANDLE, lpFileSize: &LARGE_INTEGER) -> BOOL #stdcall;

fn GetMessageA(lpMsg: &MSG, hWnd: HWND, wMsgFilterMin: UINT, wMsgFilterMax: UINT) -> BOOL #stdcall;
fn TranslateMessage(lpMsg: &MSG) -> BOOL #stdcall;
fn DispatchMessageA(lpMsg: &MSG) -> LRESULT #stdcall;
fn LoadIconA(hInstance: HINSTANCE, lpIconName: c_string) -> HICON #stdcall;
fn LoadCursorA(hInstance: HINSTANCE, lpIconName: c_string) -> HCURSOR #stdcall;
fn GetModuleHandleA(lpModuleName: c_string) -> HMODULE #stdcall;
fn DefWindowProcA(hwnd: HWND, msg: UINT, wparam: WPARAM, lparam: LPARAM) -> LRESULT #stdcall;
fn RegisterClassA(wndClass: &WNDCLASSA) -> ATOM #stdcall;
fn AdjustWindowRectEx(lpRect: &RECT, dwStyle: DWORD, bMenu: BOOL, dwExStyle: DWORD) -> BOOL #stdcall;
fn CreateWindowExA(dwExStyle: DWORD, lpClassNa: c_string, lpWindowName : c_string, dwSty: DWORD, X: i32, Y: i32, nWidt: i32, nHeig: i32, hWndParen: HWND, hMenu: HMENU, hInstance: HINSTANCE, lpPar: &any) -> HWND #stdcall;
fn PostQuitMessage(exitCode: i32) #stdcall;
// somehow not linking
// fn GetCurrentDirectory(nBufferLength: DWORD, lpBuffer: c_string) -> DWORD #stdcall;

fn QueryPerformanceCounter(lpPerformanceCount: &LARGE_INTEGER) -> BOOL #stdcall;
fn QueryPerformanceFrequency(lpPerformanceCount: &LARGE_INTEGER) -> BOOL #stdcall;