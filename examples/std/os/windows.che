
struct _OFSTRUCT {
    cBytes: i8
    fFixedDisk: i8
    nErrCode: i16
    Reserved1: i16
    Reserved2: i16
    szPathName: [128]i8
}

typedef HFILE = i32
typedef HANDLE = *any

fn GetStdHandle(h: i32) -> i32 #stdcall;
fn WriteFile(handle: i32, str: c_string, length: i32, bw: *i32, res: i32) #stdcall;
fn ReadFile(hFile: HANDLE, lpBuffer: *any, nNumberOfBytesToRead: i32, lpNumberOfBytesRead: *i32, lpOverlapped: *any) -> bool #stdcall;

let __std_in_handle: i32 = GetStdHandle(-10)
let __std_out_handle: i32 = GetStdHandle(-11)
let __std_err_handle: i32 = GetStdHandle(-12)

fn OpenFile(lpFileName: c_string, lpReOpenBuff: *_OFSTRUCT, uStyle: u32) -> HFILE #stdcall;
fn CloseHandle(hObject: HANDLE) -> bool #stdcall;
fn GetFileSize(hObject: HANDLE, lpFileSizeHigh: *i32) -> i32 #stdcall;

fn QueryPerformanceCounter(lpPerformanceCount: *u64) -> bool #stdcall;
fn QueryPerformanceFrequency(lpPerformanceCount: *u64) -> bool #stdcall;
