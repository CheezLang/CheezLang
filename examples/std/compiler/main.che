use import token
use import lexer
use import string_database
use import cheez_compiler
use import parser

use import std.time
use import std.mem.arena_allocator
use import std.mem.allocator
io :: import std.io


Main :: () {
    string_db := StringDatabase.create()
    compiler := CheezCompiler.create()

    match Lexer.from_file("../examples/test.che", string_db) {
        Ok($l) -> {
            parser := Parser.create(compiler, l)
            start := get_time_milliseconds()
            while true {
                stmt := parser.parse_statement()
                match stmt {
                    Some($stmt) -> {
                        io.println(<<stmt)
                    }

                    None -> {
                        break
                    }
                }
            }

            end := get_time_milliseconds()
            elapsed := ((cast(double)end) - (cast(double)start)) / 1000.0
            io.printfln("elapsed: {}", elapsed)
        }

        Err($msg) -> {
            io.println(msg)
        }
    }
}
