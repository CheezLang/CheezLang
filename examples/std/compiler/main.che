// #load("tests/library/hash_table1")
// #load("examples/lua_example.che")


#load("std:io/io")
#load("std:time")
#load("std:mem/arena_allocator")

#load("token")
#load("lexer")
#load("string_database")
#load("cheez_compiler")
#load("parser")

Main :: () {
    string_db := StringDatabase.create()
    compiler := CheezCompiler.create()

    match Lexer.from_file("../examples/test.che", string_db) {
        Ok($l) -> {
            parser := Parser.create(compiler, l)
            start := get_time_milliseconds()
            while true {
                stmt := parser.parse_statement()
                match stmt {
                    Some($stmt) -> {
                        // println(<<stmt)
                    }

                    None -> {
                        break
                    }
                }
            }

            end := get_time_milliseconds()
            elapsed := ((cast(double)end) - (cast(double)start)) / 1000.0
            printfln("elapsed: {}", elapsed)
        }

        Err($msg) -> {
            println(msg)
        }
    }
}
