use import std.mem.allocator
c :: import std.c

StdHeapAllocator :: struct {
    _unused: i32 = 0
}

impl Allocator for StdHeapAllocator {
    allocate   :: (ref Self, count: uint, elementSize: uint, alignment: uint) -> &void {
        return c.malloc(cast(uint) (count * elementSize))
    }

    reallocate :: (ref Self, mem: &void, count: uint, elementSize: uint, alignment: uint) -> &void {
        return c.realloc(mem, cast(uint) (count * elementSize))
    }

    free       :: (ref Self, mem: &void) {
        c.free(mem)
    }
}

DEFAULT_STD_HEAP_ALLOCATOR : StdHeapAllocator = StdHeapAllocator(0)
