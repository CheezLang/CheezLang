#load("std:mem/allocator")
#load("std:mem/memory")

struct StdHeapAllocator {
    _unused: i32 = 0
}

impl Allocator for StdHeapAllocator {
    fn allocate(count: u64, elementSize: u64, alignment: u64) -> *any {
        return c_malloc((i32)(count * elementSize))
    }

    fn reallocate(mem: *any, count: u64, elementSize: u64, alignment: u64) -> *any {
        return c_realloc(mem, (i32)(count * elementSize))
    }

    fn free(mem: *any) {
        c_free(mem)
    }
}

let DEFAULT_STD_HEAP_ALLOCATOR = new StdHeapAllocator {}
