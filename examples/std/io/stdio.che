struct FILE {
    _Placeholder: any&
}

fn __acrt_iob_func(_: uint) -> FILE&;

let stdin = __acrt_iob_func(1)
let stdout = __acrt_iob_func(1)
let stderr = __acrt_iob_func(1)

fn printf(format: c_string) #varargs;
fn fflush(file: FILE&);

///

let errno_t = int
let size_t = long

fn clearerr_s(_Stream: FILE&) -> errno_t;
fn fopen_s(_Stream: FILE&&, _FileName: c_string, _Mode: c_string) -> errno_t;
fn fopen(_Stream: FILE&&, _FileName: c_string, _Mode: c_string) -> errno_t;
fn fread_s(_Buffer: any&, _BufferSize: size_t, _ElementSize: size_t, _ElementCount: size_t, _Stream: FILE&) -> size_t;
fn fseek(_Stream: FILE&, _Offset: long, _Rel: int);
fn ftell(_Stream: FILE&) -> long;
fn fclose(_Stream: FILE&) -> int;


/*
    next: freopen_s
    file: C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h
    line: 113
*/


