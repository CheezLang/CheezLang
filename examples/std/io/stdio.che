struct FILE {
    _Placeholder: &any
}

fn __acrt_iob_func(_: u32) -> &FILE;

let stdin   : &FILE = __acrt_iob_func(1)
let stdout  : &FILE = __acrt_iob_func(1)
let stderr  : &FILE = __acrt_iob_func(1)

fn fflush(file: &FILE);

///

typedef errno_t = i32
typedef size_t = i64

fn clearerr_s(_Stream: &FILE) -> errno_t;
fn fopen_s(_Stream: &&FILE, _FileName: c_string, _Mode: c_string) -> errno_t;
fn fopen(_Stream: &&FILE, _FileName: c_string, _Mode: c_string) -> errno_t;
fn fread_s(_Buffer: &any, _BufferSize: size_t, _ElementSize: size_t, _ElementCount: size_t, _Stream: &FILE) -> size_t;
fn fseek(_Stream: &FILE, _Offset: i64, _Rel: i32);
fn ftell(_Stream: &FILE) -> i64;
fn fclose(_Stream: &FILE) -> i32;


/*
    next: freopen_s
    file: C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt\stdio.h
    line: 113
*/


