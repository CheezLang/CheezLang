#export_scope

Hashable :: trait {
    hash :: (&Self) -> uint;
}

// TODO: move to string.che
impl Hashable for c_string {
    hash :: (&Self) -> uint {
        h : u32 = 2166136261

        while i := 0, self[i] != '`0', i += 1 {
            h += cast(u32) self[i] // TODO: change to xor
            h *= 16777619
        }

        return cast h
    }
}

impl Hashable for string {
    hash :: (&Self) -> uint {
        h: u32 = 2166136261

        for i in 0..self.bytes.length {
            h += u32(*self[i])
            h *= 16777619
        }

        return h
    }
}

impl Hashable for int {
    hash :: (&Self) -> uint {
        return cast(uint) (*self * 123)
    }
}
