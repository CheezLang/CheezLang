#load("std:os/windows")

fn pointer_add_sized(ptr: &$T, amount: int) -> &T {
    return cast(&T)((cast(int) ptr) + amount * @sizeof(T))
}

fn pointer_add(ptr: &$T, amount: int) -> &T {
    return cast(&T)((cast(int) ptr) + amount)
}

fn getCurrentTimeInMicroseconds() -> int {
    let freq: int
    QueryPerformanceFrequency(&freq)

    let time: int
    QueryPerformanceCounter(&time)

    time *= 1000000
    time /= freq

    return time
}

fn getCurrentTimeInMilliseconds() -> int {
    let freq: int
    QueryPerformanceFrequency(&freq)

    let time: int
    QueryPerformanceCounter(&time)

    time *= 1000000
    time /= freq

    return time / 1000
}
