#lib("./x64/glfw3dll.lib")
#lib("OpenGL32.Lib")

struct GLFWvidmode {
    /*! The width, in screen coordinates, of the video mode.
     */
    width: i32
    /*! The height, in screen coordinates, of the video mode.
     */
    height: i32
    /*! The bit depth of the red channel of the video mode.
     */
    redBits: i32
    /*! The bit depth of the green channel of the video mode.
     */
    greenBits: i32
    /*! The bit depth of the blue channel of the video mode.
     */
    blueBits: i32
    /*! The refresh rate, in Hz, of the video mode.
     */
    refreshRate: i32
}

struct GLFWgammaramp {
    /*! An array of value describing the response of the red channel.
     */
    red: &u16
    /*! An array of value describing the response of the green channel.
     */
    green: &u16
    /*! An array of value describing the response of the blue channel.
     */
    blue: &u16
    /*! The number of elements in each array.
     */
    size: u32
}

struct GLFWimage {
    /*! The width, in pixels, of this image.
     */
    width: i32
    /*! The height, in pixels, of this image.
     */
    height: i32
    /*! The pixel data of this image, arranged left-to-right, top-to-bottom.
     */
    pixels: &u8
}

struct GLFWwindow {}
struct GLFWmonitor {}
struct GLFWcursor {}

fn glfwInit() -> bool;
fn glfwTerminate();

fn glfwCreateWindow(widht: i32, height: i32, title: c_string, monitor: &GLFWmonitor, share: &GLFWwindow) -> &GLFWwindow;
fn glfwWindowShouldClose(window: &GLFWwindow) -> bool;
fn glfwPollEvents();
fn glfwSwapBuffers(window: &GLFWwindow);
fn glfwSwapInterval(interval: i32);

fn glfwMakeContextCurrent(window: &GLFWwindow);
fn glfwSetKeyCallback(window: &GLFWwindow, callback: fn (&GLFWwindow, i32, i32, i32, i32) {});
fn glfwSetWindowSizeCallback(window: &GLFWwindow, callback: fn (&GLFWwindow, i32, i32) {});
fn glfwWindowHint(hint: i32, value: i32);

fn glfwGetTime() -> double;

let GLFW_RELEASE                : i32 = 0
let GLFW_PRESS                  : i32 = 1
let GLFW_REPEAT                 : i32 = 2

/* The unknown key */
let GLFW_KEY_UNKNOWN            : i32 = -1

/* Printable keys */
let GLFW_KEY_SPACE              : i32 = 32
let GLFW_KEY_APOSTROPHE         : i32 = 39  /* ' */
let GLFW_KEY_COMMA              : i32 = 44  /* , */
let GLFW_KEY_MINUS              : i32 = 45  /* - */
let GLFW_KEY_PERIOD             : i32 = 46  /* . */
let GLFW_KEY_SLASH              : i32 = 47  /* / */
let GLFW_KEY_0                  : i32 = 48
let GLFW_KEY_1                  : i32 = 49
let GLFW_KEY_2                  : i32 = 50
let GLFW_KEY_3                  : i32 = 51
let GLFW_KEY_4                  : i32 = 52
let GLFW_KEY_5                  : i32 = 53
let GLFW_KEY_6                  : i32 = 54
let GLFW_KEY_7                  : i32 = 55
let GLFW_KEY_8                  : i32 = 56
let GLFW_KEY_9                  : i32 = 57
let GLFW_KEY_SEMICOLON          : i32 = 59  /* ; */
let GLFW_KEY_EQUAL              : i32 = 61  /* = */
let GLFW_KEY_A                  : i32 = 65
let GLFW_KEY_B                  : i32 = 66
let GLFW_KEY_C                  : i32 = 67
let GLFW_KEY_D                  : i32 = 68
let GLFW_KEY_E                  : i32 = 69
let GLFW_KEY_F                  : i32 = 70
let GLFW_KEY_G                  : i32 = 71
let GLFW_KEY_H                  : i32 = 72
let GLFW_KEY_I                  : i32 = 73
let GLFW_KEY_J                  : i32 = 74
let GLFW_KEY_K                  : i32 = 75
let GLFW_KEY_L                  : i32 = 76
let GLFW_KEY_M                  : i32 = 77
let GLFW_KEY_N                  : i32 = 78
let GLFW_KEY_O                  : i32 = 79
let GLFW_KEY_P                  : i32 = 80
let GLFW_KEY_Q                  : i32 = 81
let GLFW_KEY_R                  : i32 = 82
let GLFW_KEY_S                  : i32 = 83
let GLFW_KEY_T                  : i32 = 84
let GLFW_KEY_U                  : i32 = 85
let GLFW_KEY_V                  : i32 = 86
let GLFW_KEY_W                  : i32 = 87
let GLFW_KEY_X                  : i32 = 88
let GLFW_KEY_Y                  : i32 = 89
let GLFW_KEY_Z                  : i32 = 90
let GLFW_KEY_LEFT_BRACKET       : i32 = 91  /* [ */
let GLFW_KEY_BACKSLASH          : i32 = 92  /* \ */
let GLFW_KEY_RIGHT_BRACKET      : i32 = 93  /* ] */
let GLFW_KEY_GRAVE_ACCENT       : i32 = 96  /* ` */
let GLFW_KEY_WORLD_1            : i32 = 161 /* non-US #1 */
let GLFW_KEY_WORLD_2            : i32 = 162 /* non-US #2 */

/* Function keys */
let GLFW_KEY_ESCAPE             : i32 = 256
let GLFW_KEY_ENTER              : i32 = 257
let GLFW_KEY_TAB                : i32 = 258
let GLFW_KEY_BACKSPACE          : i32 = 259
let GLFW_KEY_INSERT             : i32 = 260
let GLFW_KEY_DELETE             : i32 = 261
let GLFW_KEY_RIGHT              : i32 = 262
let GLFW_KEY_LEFT               : i32 = 263
let GLFW_KEY_DOWN               : i32 = 264
let GLFW_KEY_UP                 : i32 = 265
let GLFW_KEY_PAGE_UP            : i32 = 266
let GLFW_KEY_PAGE_DOWN          : i32 = 267
let GLFW_KEY_HOME               : i32 = 268
let GLFW_KEY_END                : i32 = 269
let GLFW_KEY_CAPS_LOCK          : i32 = 280
let GLFW_KEY_SCROLL_LOCK        : i32 = 281
let GLFW_KEY_NUM_LOCK           : i32 = 282
let GLFW_KEY_PRINT_SCREEN       : i32 = 283
let GLFW_KEY_PAUSE              : i32 = 284
let GLFW_KEY_F1                 : i32 = 290
let GLFW_KEY_F2                 : i32 = 291
let GLFW_KEY_F3                 : i32 = 292
let GLFW_KEY_F4                 : i32 = 293
let GLFW_KEY_F5                 : i32 = 294
let GLFW_KEY_F6                 : i32 = 295
let GLFW_KEY_F7                 : i32 = 296
let GLFW_KEY_F8                 : i32 = 297
let GLFW_KEY_F9                 : i32 = 298
let GLFW_KEY_F10                : i32 = 299
let GLFW_KEY_F11                : i32 = 300
let GLFW_KEY_F12                : i32 = 301
let GLFW_KEY_F13                : i32 = 302
let GLFW_KEY_F14                : i32 = 303
let GLFW_KEY_F15                : i32 = 304
let GLFW_KEY_F16                : i32 = 305
let GLFW_KEY_F17                : i32 = 306
let GLFW_KEY_F18                : i32 = 307
let GLFW_KEY_F19                : i32 = 308
let GLFW_KEY_F20                : i32 = 309
let GLFW_KEY_F21                : i32 = 310
let GLFW_KEY_F22                : i32 = 311
let GLFW_KEY_F23                : i32 = 312
let GLFW_KEY_F24                : i32 = 313
let GLFW_KEY_F25                : i32 = 314
let GLFW_KEY_KP_0               : i32 = 320
let GLFW_KEY_KP_1               : i32 = 321
let GLFW_KEY_KP_2               : i32 = 322
let GLFW_KEY_KP_3               : i32 = 323
let GLFW_KEY_KP_4               : i32 = 324
let GLFW_KEY_KP_5               : i32 = 325
let GLFW_KEY_KP_6               : i32 = 326
let GLFW_KEY_KP_7               : i32 = 327
let GLFW_KEY_KP_8               : i32 = 328
let GLFW_KEY_KP_9               : i32 = 329
let GLFW_KEY_KP_DECIMAL         : i32 = 330
let GLFW_KEY_KP_DIVIDE          : i32 = 331
let GLFW_KEY_KP_MULTIPLY        : i32 = 332
let GLFW_KEY_KP_SUBTRACT        : i32 = 333
let GLFW_KEY_KP_ADD             : i32 = 334
let GLFW_KEY_KP_ENTER           : i32 = 335
let GLFW_KEY_KP_EQUAL           : i32 = 336
let GLFW_KEY_LEFT_SHIFT         : i32 = 340
let GLFW_KEY_LEFT_CONTROL       : i32 = 341
let GLFW_KEY_LEFT_ALT           : i32 = 342
let GLFW_KEY_LEFT_SUPER         : i32 = 343
let GLFW_KEY_RIGHT_SHIFT        : i32 = 344
let GLFW_KEY_RIGHT_CONTROL      : i32 = 345
let GLFW_KEY_RIGHT_ALT          : i32 = 346
let GLFW_KEY_RIGHT_SUPER        : i32 = 347
let GLFW_KEY_MENU               : i32 = 348

let GLFW_KEY_LAST               : i32 = GLFW_KEY_MENU

//
let GLFW_CLIENT_API             : i32 = 0x00022001
let GLFW_CONTEXT_VERSION_MAJOR  : i32 = 0x00022002
let GLFW_CONTEXT_VERSION_MINOR  : i32 = 0x00022003
let GLFW_CONTEXT_REVISION       : i32 = 0x00022004
let GLFW_CONTEXT_ROBUSTNESS     : i32 = 0x00022005
let GLFW_OPENGL_FORWARD_COMPAT  : i32 = 0x00022006
let GLFW_OPENGL_DEBUG_CONTEXT   : i32 = 0x00022007
let GLFW_OPENGL_PROFILE         : i32 = 0x00022008
let GLFW_CONTEXT_RELEASE_BEHAVIOR : i32 = 0x00022009
let GLFW_CONTEXT_NO_ERROR       : i32 = 0x0002200A
let GLFW_CONTEXT_CREATION_API   : i32 = 0x0002200B
//
