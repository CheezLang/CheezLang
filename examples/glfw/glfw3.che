#lib("./x64/glfw3dll.lib")
#lib("OpenGL32.Lib")

GLFWvidmode :: struct {
    /*! The width, in screen coordinates, of the video mode.
     */
    width: i32
    /*! The height, in screen coordinates, of the video mode.
     */
    height: i32
    /*! The bit depth of the red channel of the video mode.
     */
    redBits: i32
    /*! The bit depth of the green channel of the video mode.
     */
    greenBits: i32
    /*! The bit depth of the blue channel of the video mode.
     */
    blueBits: i32
    /*! The refresh rate, in Hz, of the video mode.
     */
    refreshRate: i32
}

GLFWgammaramp :: struct {
    /*! An array of value describing the response of the red channel.
     */
    red: &u16
    /*! An array of value describing the response of the green channel.
     */
    green: &u16
    /*! An array of value describing the response of the blue channel.
     */
    blue: &u16
    /*! The number of elements in each array.
     */
    size: u32
}

GLFWimage :: struct {
    /*! The width, in pixels, of this image.
     */
    width: i32
    /*! The height, in pixels, of this image.
     */
    height: i32
    /*! The pixel data of this image, arranged left-to-right, top-to-bottom.
     */
    pixels: &u8
}

GLFWwindow :: struct {}
GLFWmonitor :: struct {}
GLFWcursor :: struct {}

glfwInit :: () -> bool;
glfwTerminate :: ();

glfwCreateWindow :: (widht: i32, height: i32, title: c_string, monitor: &GLFWmonitor, share: &GLFWwindow) -> &GLFWwindow;
glfwWindowShouldClose :: (window: &GLFWwindow) -> bool;
glfwPollEvents :: ();
glfwSwapBuffers :: (window: &GLFWwindow);
glfwSwapInterval :: (interval: i32);

glfwSetWindowTitle :: (window: &GLFWwindow, title: c_string);
glfwMakeContextCurrent :: (window: &GLFWwindow);
glfwSetKeyCallback :: (window: &GLFWwindow, callback: fn (&GLFWwindow, i32, i32, i32, i32));
glfwSetWindowSizeCallback :: (window: &GLFWwindow, callback: fn (&GLFWwindow, i32, i32));
glfwWindowHint :: (hint: i32, value: i32);

glfwGetTime :: () -> double;

GLFW_RELEASE : i32 = 0
GLFW_PRESS : i32 = 1
GLFW_REPEAT : i32 = 2

/* The unknown key */
GLFW_KEY_UNKNOWN : i32 = -1

/* Printable keys */
GLFW_KEY_SPACE : i32 = 32
GLFW_KEY_APOSTROPHE : i32 = 39  /* ' */
GLFW_KEY_COMMA : i32 = 44  /* , */
GLFW_KEY_MINUS : i32 = 45  /* - */
GLFW_KEY_PERIOD : i32 = 46  /* . */
GLFW_KEY_SLASH : i32 = 47  /* / */
GLFW_KEY_0 : i32 = 48
GLFW_KEY_1 : i32 = 49
GLFW_KEY_2 : i32 = 50
GLFW_KEY_3 : i32 = 51
GLFW_KEY_4 : i32 = 52
GLFW_KEY_5 : i32 = 53
GLFW_KEY_6 : i32 = 54
GLFW_KEY_7 : i32 = 55
GLFW_KEY_8 : i32 = 56
GLFW_KEY_9 : i32 = 57
GLFW_KEY_SEMICOLON : i32 = 59  /* ; */
GLFW_KEY_EQUAL : i32 = 61  /* = */
GLFW_KEY_A : i32 = 65
GLFW_KEY_B : i32 = 66
GLFW_KEY_C : i32 = 67
GLFW_KEY_D : i32 = 68
GLFW_KEY_E : i32 = 69
GLFW_KEY_F : i32 = 70
GLFW_KEY_G : i32 = 71
GLFW_KEY_H : i32 = 72
GLFW_KEY_I : i32 = 73
GLFW_KEY_J : i32 = 74
GLFW_KEY_K : i32 = 75
GLFW_KEY_L : i32 = 76
GLFW_KEY_M : i32 = 77
GLFW_KEY_N : i32 = 78
GLFW_KEY_O : i32 = 79
GLFW_KEY_P : i32 = 80
GLFW_KEY_Q : i32 = 81
GLFW_KEY_R : i32 = 82
GLFW_KEY_S : i32 = 83
GLFW_KEY_T : i32 = 84
GLFW_KEY_U : i32 = 85
GLFW_KEY_V : i32 = 86
GLFW_KEY_W : i32 = 87
GLFW_KEY_X : i32 = 88
GLFW_KEY_Y : i32 = 89
GLFW_KEY_Z : i32 = 90
GLFW_KEY_LEFT_BRACKET : i32 = 91  /* [ */
GLFW_KEY_BACKSLASH : i32 = 92  /* \ */
GLFW_KEY_RIGHT_BRACKET : i32 = 93  /* ] */
GLFW_KEY_GRAVE_ACCENT : i32 = 96  /* ` */
GLFW_KEY_WORLD_1 : i32 = 161 /* non-US #1 */
GLFW_KEY_WORLD_2 : i32 = 162 /* non-US #2 */

/* Function keys */
GLFW_KEY_ESCAPE : i32 = 256
GLFW_KEY_ENTER : i32 = 257
GLFW_KEY_TAB : i32 = 258
GLFW_KEY_BACKSPACE : i32 = 259
GLFW_KEY_INSERT : i32 = 260
GLFW_KEY_DELETE : i32 = 261
GLFW_KEY_RIGHT : i32 = 262
GLFW_KEY_LEFT : i32 = 263
GLFW_KEY_DOWN : i32 = 264
GLFW_KEY_UP : i32 = 265
GLFW_KEY_PAGE_UP : i32 = 266
GLFW_KEY_PAGE_DOWN : i32 = 267
GLFW_KEY_HOME : i32 = 268
GLFW_KEY_END : i32 = 269
GLFW_KEY_CAPS_LOCK : i32 = 280
GLFW_KEY_SCROLL_LOCK : i32 = 281
GLFW_KEY_NUM_LOCK : i32 = 282
GLFW_KEY_PRINT_SCREEN : i32 = 283
GLFW_KEY_PAUSE : i32 = 284
GLFW_KEY_F1 : i32 = 290
GLFW_KEY_F2 : i32 = 291
GLFW_KEY_F3 : i32 = 292
GLFW_KEY_F4 : i32 = 293
GLFW_KEY_F5 : i32 = 294
GLFW_KEY_F6 : i32 = 295
GLFW_KEY_F7 : i32 = 296
GLFW_KEY_F8 : i32 = 297
GLFW_KEY_F9 : i32 = 298
GLFW_KEY_F10 : i32 = 299
GLFW_KEY_F11 : i32 = 300
GLFW_KEY_F12 : i32 = 301
GLFW_KEY_F13 : i32 = 302
GLFW_KEY_F14 : i32 = 303
GLFW_KEY_F15 : i32 = 304
GLFW_KEY_F16 : i32 = 305
GLFW_KEY_F17 : i32 = 306
GLFW_KEY_F18 : i32 = 307
GLFW_KEY_F19 : i32 = 308
GLFW_KEY_F20 : i32 = 309
GLFW_KEY_F21 : i32 = 310
GLFW_KEY_F22 : i32 = 311
GLFW_KEY_F23 : i32 = 312
GLFW_KEY_F24 : i32 = 313
GLFW_KEY_F25 : i32 = 314
GLFW_KEY_KP_0 : i32 = 320
GLFW_KEY_KP_1 : i32 = 321
GLFW_KEY_KP_2 : i32 = 322
GLFW_KEY_KP_3 : i32 = 323
GLFW_KEY_KP_4 : i32 = 324
GLFW_KEY_KP_5 : i32 = 325
GLFW_KEY_KP_6 : i32 = 326
GLFW_KEY_KP_7 : i32 = 327
GLFW_KEY_KP_8 : i32 = 328
GLFW_KEY_KP_9 : i32 = 329
GLFW_KEY_KP_DECIMAL : i32 = 330
GLFW_KEY_KP_DIVIDE : i32 = 331
GLFW_KEY_KP_MULTIPLY : i32 = 332
GLFW_KEY_KP_SUBTRACT : i32 = 333
GLFW_KEY_KP_ADD : i32 = 334
GLFW_KEY_KP_ENTER : i32 = 335
GLFW_KEY_KP_EQUAL : i32 = 336
GLFW_KEY_LEFT_SHIFT : i32 = 340
GLFW_KEY_LEFT_CONTROL : i32 = 341
GLFW_KEY_LEFT_ALT : i32 = 342
GLFW_KEY_LEFT_SUPER : i32 = 343
GLFW_KEY_RIGHT_SHIFT : i32 = 344
GLFW_KEY_RIGHT_CONTROL : i32 = 345
GLFW_KEY_RIGHT_ALT : i32 = 346
GLFW_KEY_RIGHT_SUPER : i32 = 347
GLFW_KEY_MENU : i32 = 348

GLFW_KEY_LAST : i32 = GLFW_KEY_MENU

//
GLFW_CLIENT_API : i32 = 0x00022001
GLFW_CONTEXT_VERSION_MAJOR : i32 = 0x00022002
GLFW_CONTEXT_VERSION_MINOR : i32 = 0x00022003
GLFW_CONTEXT_REVISION : i32 = 0x00022004
GLFW_CONTEXT_ROBUSTNESS : i32 = 0x00022005
GLFW_OPENGL_FORWARD_COMPAT : i32 = 0x00022006
GLFW_OPENGL_DEBUG_CONTEXT : i32 = 0x00022007
GLFW_OPENGL_PROFILE : i32 = 0x00022008
GLFW_CONTEXT_RELEASE_BEHAVIOR : i32 = 0x00022009
GLFW_CONTEXT_NO_ERROR : i32 = 0x0002200A
GLFW_CONTEXT_CREATION_API : i32 = 0x0002200B
//
