// import examples.trait_function_call_performance
// import examples.glfw3_example
// import examples.graphyfier.graphyfier
// import examples.pathtracer2.main
// import examples.geometry_draw_thingy
// import examples.signed_distance_field_renderer
// import examples.snake.snake
// import examples.pathtracer
// import examples.print_any
// import examples.command_line_parser
// import std.compiler.main
// import std.compiler.compiler_test

// import examples.postfix
// import examples.image_processing
// import examples.clox.main
// import examples.lua_example

// import tests.language.global_variables
// import tests.library.all_include
// import tests.other.test1
// import "examples/project_euler/018_maximum_path_sum_1"
// import bugs.bug1

/*
#test_expect_output("")

io  :: import std.io
fmt :: import std.fmt

// Foo :: struct {
//     #help #test1
//     num: int

//     lol: string

//     #help2("lol")
//     #help3
//     flt: float

//     bar: bool

// }

Bar :: struct {
    #test("lol")
    num : int
}

Main :: () {
    ti := &@type_info(Bar).kind.Struct
    for mem: ti.members {
        for att : mem.attributes {
            io.printf("#{}(", att.name)
            for arg : att.args {
                io.print(fmt.format_any(arg))
            }
            io.print(") ")
        }
        io.printfln("`n{}`n", mem.name)

    }
}
// */