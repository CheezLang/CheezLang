#load("std:string")
#load("std:array")
#load("std:hash_table")

impl Into(double) for int {
    fn into(ref Self) -> double {
        return double(self)
    }
}

impl Into(String) for int {
    fn into(ref Self) -> String {
        return String::format("{} int", [self])
    }
}

fn print_array(arr: ref Array($T)) {
    let it = arr.iterator()
    while true {
        match it.next() {
            Some($v) -> println(v)
            None -> {break}
        }
    }
    println("")
}

fn Main() {
    let ints = Array(int)::create()
    ints.add(5)
    ints.add(1)
    ints.add(3)
    ints.add(7)


    let doubles: Array(double) = Into(Array(double))(ints).into()
    let strings: Array(String) = Into(Array(String))(ints).into()

    print_array(ints)
    print_array(doubles)
    print_array(strings)
}