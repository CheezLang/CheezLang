// https://projecteuler.net/problem=12
// maybe find a better way, this took linke 30 minutes to run

#test_expect_output("76576500")

#load("std:io/io")
#load("std:math")

count_divisors :: (num: int) -> int {
    count := 0
    max := int(sqrt(double(num)))

    for(inclusive=true) 1..max {
        if num % it == 0 {
            count += 2
        }
    }

    return count
}

Main :: () {
    current := 0
    while i := 1, true, i += 1 {
        current += i
        divisors := count_divisors(current)
        if divisors > 500 then break
    }

    println(current)
}