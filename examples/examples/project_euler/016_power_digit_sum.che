// https://projecteuler.net/problem=16

#test_expect_output("1366")

io :: import std.io

Main :: () {
    digits := @dup(0, 1000)
    *digits[0] = 1
    mut leftmost_digit := 0

    // calculate 2^1000
    for 0..1000 {
        mut carry := 0
        for i in 0 ..= leftmost_digit {
            mut d := *digits[i]
            d = d * 2 + carry
            *digits[i] = d % 10
            carry = d / 10
        }
        if carry != 0 {
            leftmost_digit += 1
            *digits[leftmost_digit] = 1
        }
    }

    // calculate sum of digits
    mut sum := 0
    for(reverse=true) @cast([]int, digits) {
        sum += it
    }

    io.println(sum)
}