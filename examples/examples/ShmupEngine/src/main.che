use import std.string
use import std.array
use import std.math
use import std.rc
rand :: import std.random
mem  :: import std.mem.allocator
fmt  :: import std.fmt
io   :: import std.io
C    :: import std.c
util :: import std.util

use import opengl.glad_binding
ImGui :: import imgui.imgui_binding
glfw  :: import glfw.glfw3

use import shmup_engine
use import opengl_utils
use import shader
use import math
use import matrix
use import renderer
use import opengl_buffers
use import input
use import layer
use import entity
use import components

max_entities :: 1024

Test :: struct {
    layer : &EntityLayer = null
}

impl EntityLayerCallbacks for Test {
    init :: (ref Self, layer: ref EntityLayer) -> bool {
        self.layer = &layer

        layer.engine.save_file = Some(String.from_string("D:/Programming/CheezLang/data/example_layer.txt"))

        return true
    }

    update :: (ref Self, dt: float) {
    }

    render :: (ref Self, renderer: ref Renderer) {
    }

    imgui_render :: (ref Self) {
    }
}

Main :: () {
    rand.PseudoRandom.init()

    test  := Test()

    shmup_engine := ShmupEngine.new()
    shmup_engine.push_entity_layer(String.from_string("test layer"), &test)
    shmup_engine.start()
}
