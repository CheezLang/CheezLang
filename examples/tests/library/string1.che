#test_expect_output("capaci: 5
length: 5
string: `"lol: `"

capaci: 10
length: 5
string: `"lol: `"

capaci: 11
length: 11
string: `"lol: Hello `"

capaci: 16
length: 16
string: `"lol: Hello World`"

capaci: 17
length: 17
string: `"lol: Hello World!`"

capaci: 43
length: 43
string: `"lol: Hello World! This is another string =)`"

 slice: `"lol: Hello World! This is another string =)`"
 slice: `"Hello World! This is another string =)`"
 slice: `"lol`"
 slice: `"Hello`"

indexo: 3
indexo: 11
indexo: -1")

use import std.string
C :: import std.c

Main :: () {
    s := String.from_cstring("lol: "c)

    C.printf("capaci: %lld`n", s.get_capacity())
    C.printf("length: %lld`n", s.length)
    C.printf("string: `"%.*s`"`n", s.length, s.get_raw())
    C.printf("`n")

    s.reserve(10)
    C.printf("capaci: %lld`n", s.get_capacity())
    C.printf("length: %lld`n", s.length)
    C.printf("string: `"%.*s`"`n", s.length, s.get_raw())
    C.printf("`n")

    &s += "Hello "
    C.printf("capaci: %lld`n", s.get_capacity())
    C.printf("length: %lld`n", s.length)
    C.printf("string: `"%.*s`"`n", s.length, s.get_raw())
    C.printf("`n")

    &s += "World"c
    C.printf("capaci: %lld`n", s.get_capacity())
    C.printf("length: %lld`n", s.length)
    C.printf("string: `"%.*s`"`n", s.length, s.get_raw())
    C.printf("`n")

    &s += '!'
    C.printf("capaci: %lld`n", s.get_capacity())
    C.printf("length: %lld`n", s.length)
    C.printf("string: `"%.*s`"`n", s.length, s.get_raw())
    C.printf("`n")

    {
        str := String.from_string(" This is another string =)")
        &s += &str
    }
    C.printf("capaci: %lld`n", s.get_capacity())
    C.printf("length: %lld`n", s.length)
    C.printf("string: `"%.*s`"`n", s.length, s.get_raw())
    C.printf("`n")

    sub := s.slice()
    C.printf(" slice: `"%.*s`"`n", sub.bytes.length, sub.bytes.data)
    sub = s.sliceF(5)
    C.printf(" slice: `"%.*s`"`n", sub.bytes.length, sub.bytes.data)
    sub = s.sliceL(3)
    C.printf(" slice: `"%.*s`"`n", sub.bytes.length, sub.bytes.data)
    sub = s.sliceFL(5, 5)
    C.printf(" slice: `"%.*s`"`n", sub.bytes.length, sub.bytes.data)
    C.printf("`n")

    C.printf("indexo: %lld`n", s.index_of(':'))
    C.printf("indexo: %lld`n", s.index_of('W'))
    C.printf("indexo: %lld`n", s.index_of('z'))
}