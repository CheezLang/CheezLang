#test_expect_output("( [], Free: 1024 )
( [(0:8)], Free: 1016 )
5
10
( [(0:8), (8:8), (16:8), (24:8), (32:8), (40:8), (48:8), (56:8), (64:8), (72:8), (80:8), (88:8), (96:8), (104:8), (112:8), (120:8), (128:8), (136:8), (144:8), (152:8), (160:8), (168:8), (176:8), (184:8), (192:8), (200:8), (208:8), (216:8), (224:8), (232:8), (240:8), (248:8), (256:8), (264:8), (272:8), (280:8), (288:8), (296:8), (304:8), (312:8), (320:8), (328:8), (336:8), (344:8), (352:8), (360:8), (368:8), (376:8), (384:8), (392:8), (400:8), (408:8), (416:8), (424:8), (432:8), (440:8), (448:8), (456:8), (464:8), (472:8), (480:8), (488:8), (496:8), (504:8), (512:8), (520:8), (528:8), (536:8), (544:8), (552:8), (560:8), (568:8), (576:8), (584:8), (592:8), (600:8), (608:8), (616:8), (624:8), (632:8), (640:8), (648:8), (656:8), (664:8), (672:8), (680:8), (688:8), (696:8), (704:8), (712:8), (720:8), (728:8), (736:8), (744:8), (752:8), (760:8), (768:8), (776:8), (784:8), (792:8), (800:8)], Free: 216 )")

use import std.mem.allocator
use import std.mem.stack_allocator
io :: import std.io

Main :: () {
    sa := StackAllocator.create(1024)
    sa.print_diagnostics()
    
    pa := alloc(int, ^sa)
    sa.print_diagnostics()

    <<pa = 5
    io.println(<<pa)
    <<pa = 10
    io.println(<<pa)

    for i : 0..100 {
        alloc(int, ^sa)
    }
    sa.print_diagnostics()
}