#test_expect_output("01234")
#test_expect_output("012345")
#test_expect_output("0123")
#test_expect_output("13579")
#test_expect_output("14,13,11,10,8,7,5,4,2,1,")
#test_expect_output("1 2 Fizz 4 Buzz Fizz 7 8 Fizz Buzz 11 Fizz 13 14 FizzBuzz 16 17 Fizz 19 ")

#load("std:preload")

fn c_printf(format: c_string) #varargs #linkname("printf");

fn Main() {
    test1(5)
    test2(6)
    test3(4)
    test4(10)
    test5(15)
    fizz_buzz(20)
}

fn fizz_buzz(n: int) {
    while let a = 1, a < n, a = a + 1 {
        if a % 5 == 0 and a % 3 == 0 {
            c_printf("FizzBuzz ")
        } else if a % 5 == 0 {
            c_printf("Buzz ")
        } else if a % 3 == 0 {
            c_printf("Fizz ")
        } else {
            c_printf("%lld ", a)
        }
    }
}

fn test5(n: int) {
    while true, n = n - 1 {
        if n == 0 {
            break
        }

        if n % 3 == 0 {
            continue
        }

        c_printf("%lld,", n)
    }
    c_printf("`n")
}

fn test4(n: int) {
    while let a = 0, a < n, a = a + 1 {
        if a % 2 == 0 {
            continue
        }

        c_printf("%lld", a)
    }
    c_printf("`n")
}

fn test3(n: int) {
    while let a = 0, true, a = a + 1 {
        if a == n {
            break
        }

        c_printf("%lld", a)
    }
    c_printf("`n")
}

fn test2(n: int) {
    while let a = 0, a < n, a = a + 1 {
        c_printf("%lld", a)
    }
    c_printf("`n")
}

fn test1(n: int) {
    let a = 0
    while a < n {
        c_printf("%lld", a)
        a = a + 1
    }
    c_printf("`n")
}

