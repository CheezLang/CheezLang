#test_expect_output("
foo(self): 5
bar()

foo1(self, 3): 15
15
bar1(3) -> 3
3
")

io :: import std.io

S :: struct {
    a: int
}

impl S {
    foo :: (ref Self) {
        io.printfln("foo(self): {}", a)
    }

    foo1 :: (ref Self, x: int) -> int {
        result := a * x
        io.printfln("foo1(self, {}): {}", (x, result))
        return result
    }
}

bar :: () {
    io.println("bar()")
}

bar1 :: (x: int) -> int {
    io.printfln("bar1({}) -> {}", (x, x))
    return x
}

test :: (f: Fn()) {
    f()
}

test1 :: (f: Fn(int) -> int, x: int) {
    io.println(f(x))
}

Main :: () {
    io.println("")
    s := S(5)

    test(cast s.foo)
    test(cast bar)

    io.println("")

    test1(cast s.foo1, 3)
    test1(cast bar1, 3)

    io.println("")
}