#test_expect_output("1.000000, 2.000000")
#test_expect_output("3.000000, 4.000000")
#test_expect_output("9.000000, 11.000000")
#test_expect_output("3.000000, 4.000000")
#test_expect_output("-2.000000, -2.000000")



C :: import std.c

Vector :: struct(T: type) #copy {
    x: T
    y: T
}

impl(T: type) Vector[T] {
    add :: (&mut Self, other: Vector[T]) -> &mut Vector[T] {
        x += other.x
        y += other.y

        return self
    }

    sub :: (a: Vector[T], b: Vector[T]) -> Vector[T] {
        return Vector[T](
            a.x - b.x
            a.y - b.y
        )
    }
}

Vec3  :: Vector[double]
Vec3f :: Vector[float]
Vec3i :: Vector[int]

Main :: () {
    a := Vec3(1, 2)
    b := Vec3(3, 4)
    
    C.printf("%f, %f`n", a.x, a.y)
    C.printf("%f, %f`n", b.x, b.y)

    c := Vec3.sub(a, b)
    a.add(b).add(Vec3(5, 5))

    C.printf("%f, %f`n", a.x, a.y)
    C.printf("%f, %f`n", b.x, b.y)
    C.printf("%f, %f`n", c.x, c.y)
}