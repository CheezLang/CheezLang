#test_expect_output("a: 123")
#test_expect_output("b: 1")
#test_expect_output("c: 123, d: 1")
#test_expect_output("f[0]: 123, f[1]: 1")
#test_expect_output("g: 123, h: 1")

#test_expect_output("a: 456")
#test_expect_output("b: 0")
#test_expect_output("c: 456, d: 0")
#test_expect_output("f[0]: 456, f[1]: 0")
#test_expect_output("g: 456, h: 0")

#test_expect_output("a: 479")
#test_expect_output("b: 0")
#test_expect_output("c: 454, d: 0")
#test_expect_output("f[0]: 456, f[1]: 0")
#test_expect_output("g: 456, h: 0")

C :: import std.c

Main :: () {
    mut a := 123
    mut b : bool = true
    mut (c, d) : (int, bool) = (a, b)
    mut f := (c, d)
    mut (g, h) := f

    C.printf("a: %lld`n", a)
    C.printf("b: %lld`n", cast(int)b)
    C.printf("c: %lld, d: %lld`n", c, cast(int)d)
    C.printf("f[0]: %lld, f[1]: %lld`n", f[0], cast(int)f[1])
    C.printf("g: %lld, h: %lld`n", g, cast(int)h)
    
    a = 456
    b = false
    (d, c) = (b, a)
    f = (c, d)
    (g, h) = f
    
    C.printf("a: %lld`n", a)
    C.printf("b: %lld`n", cast(int)b)
    C.printf("c: %lld, d: %lld`n", c, cast(int)d)
    C.printf("f[0]: %lld, f[1]: %lld`n", f[0], cast(int)f[1])
    C.printf("g: %lld, h: %lld`n", g, cast(int)h)

    a += 11
    (a, c) += (3, 3)
    x := (9, -5)
    (a, c) += x

    C.printf("a: %lld`n", a)
    C.printf("b: %lld`n", cast(int)b)
    C.printf("c: %lld, d: %lld`n", c, cast(int)d)
    C.printf("f[0]: %lld, f[1]: %lld`n", f[0], cast(int)f[1])
    C.printf("g: %lld, h: %lld`n", g, cast(int)h)
}
