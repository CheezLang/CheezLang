#test_expect_output("0")
#test_expect_output("3")
#test_expect_output("6")
#test_expect_output("6.000000")

#load("std:preload")

c_printf :: (format: c_string) #varargs #linkname("printf");

Test :: struct {
    x: int
}

impl Test {
    foo :: (ref Self, a: $T) {
        self.x = cast a
    }

    bar :: (Self, $T: type) -> T {
        return cast self.x
    }
}

Main :: () {
    t := Test(0)
    c_printf("%lld`n", t.x)
    t.foo(3)
    c_printf("%lld`n", t.x)
    t.foo(6)
    c_printf("%lld`n", t.x)
    d := t.bar(double)
    c_printf("%f`n", d)
}