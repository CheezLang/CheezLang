#load("../stdio.che")
#load("../string.che")
#load("../file.che")
#load("lexer.che")
#load("token.che")

fn runCompiler(filename: c_string) {
    let lexer: Lexer
    lexer.init(filename)

    let cond = true
    while cond {
        let t = lexer.nextToken()

        t.print()
        match t.type {
            TokenType.Identifier -> print_f(" ({c[]})", &t.data.stringValue)
            TokenType.AtSignIdentifier -> print_f(" ({c[]})", &t.data.stringValue)
            TokenType.HashIdentifier -> print_f(" ({c[]})", &t.data.stringValue)
            TokenType.DollarIdentifier -> print_f(" ({c[]})", &t.data.stringValue)
            TokenType.StringLiteral -> {
                print_f(" (`"{c[]}`")", &t.data.stringValue)
            }
        }
        println("")

        if t.type == TokenType.EOF {
            cond = false
        }
    }

    println("`ndone")

    lexer.cleanup()
}
