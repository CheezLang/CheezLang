#load("../stdio.che")
#load("../string.che")
#load("../file.che")
#load("lexer.che")
#load("token.che")

fn RunCompiler(filename: string) {
    let lexer: Lexer
    lexer.Init(filename)

    let cond = true
    while cond {
        let t = lexer.NextToken()

        t.Print()
        match t.type {
            TokenType.Identifier -> Printf(" ({c[]})", &t.data.identifier)
            TokenType.AtSignIdentifier -> Printf(" ({c[]})", &t.data.identifier)
            TokenType.HashIdentifier -> Printf(" ({c[]})", &t.data.identifier)
            TokenType.DollarIdentifier -> Printf(" ({c[]})", &t.data.identifier)
            TokenType.StringLiteral -> {
                Printf(" (`"{S}`")", &t.data.stringLiteral)
            }
        }
        Println("")

        if t.type == TokenType.EOF {
            cond = false
        }
    }

    Println("`ndone")

    lexer.Cleanup()
}
