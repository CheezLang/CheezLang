#load("io.che")
// #load("array.che")
#load("memory.che")

fn Main()
{
    let str = NewString()
    defer str.Dispose()

    str.Reserve(20)

    Sprint(&str, true)
    Sprint(&str, " ")
    Sprint(&str, false)
    Sprint(&str, " test ".ToString())
    Sprint(&str, 5)
    Sprint(&str, " ")
    Sprint(&str, 123)
    Sprint(&str, " ")
    Sprint(&str, -789456)
    Sprint(&str, " ")
    Sprintf(&str, "`nthis is a number: {i32}`n", 654)

    let test = "uiaeuiaeu".ToString()

    Sprintf(&str, "this is a StringBase(i8): {S}", &test)


    Println(str)
}

fn test(val: $T) {
    if (@typeseq(StringBase($X), T)) {
        if @typeseq(X, i8) {
            Println("ascii string")
        }
        else if @typeseq(X, int) {
            Println("utf32 string")
        }
        else {
            Printlnf("StringBase({s})", @typename(X))
        }
    }
    else {
        Printlnf("not a StringBase type: {s}", @typename(T))
    }
}
