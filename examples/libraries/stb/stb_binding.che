
#lib("./lib/stb_binding.lib")
#export_scope

stbi_uc :: u8
stbi_us :: u16
stbi__uint16 :: u16
stbi__int16 :: i16
stbi__uint32 :: u32
stbi__int32 :: i32
stbi__context :: struct #copy {}
stbi__result_info :: struct #copy {}
stbi__huffman :: struct #copy {}
stbi__jpeg :: struct #copy {}
resample_row_func :: fn(&stbi_uc, &stbi_uc, &stbi_uc, i32, i32) -> &stbi_uc
stbi__resample :: struct #copy {}
stbi__zhuffman :: struct #copy {}
stbi__zbuf :: struct #copy {}
stbi__pngchunk :: struct #copy {}
stbi__png :: struct #copy {}
stbi__bmp_data :: struct #copy {}
stbi__pic_packet :: struct #copy {}
stbi__gif_lzw :: struct #copy {}
stbi__gif :: struct #copy {}
__m128d :: struct #copy {
    m128d_f64 : [2]f64 = default
}
__m512d :: struct #copy {
    m512d_f64 : [8]f64 = default
}
stbi__refill_buffer :: (_s: &stbi__context) {
    __c__stbi__refill_buffer(_s)
}
stbi__jpeg_test :: (_s: &stbi__context) -> i32 {
    result : i32 = default
    __c__stbi__jpeg_test(&result, _s)
    return result
}
stbi__jpeg_load :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info) -> &void {
    result : &void = default
    __c__stbi__jpeg_load(&result, _s, _x, _y, _comp, _req_comp, _ri)
    return result
}
stbi__jpeg_info :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32) -> i32 {
    result : i32 = default
    __c__stbi__jpeg_info(&result, _s, _x, _y, _comp)
    return result
}
stbi__png_test :: (_s: &stbi__context) -> i32 {
    result : i32 = default
    __c__stbi__png_test(&result, _s)
    return result
}
stbi__png_load :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info) -> &void {
    result : &void = default
    __c__stbi__png_load(&result, _s, _x, _y, _comp, _req_comp, _ri)
    return result
}
stbi__png_info :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32) -> i32 {
    result : i32 = default
    __c__stbi__png_info(&result, _s, _x, _y, _comp)
    return result
}
stbi__png_is16 :: (_s: &stbi__context) -> i32 {
    result : i32 = default
    __c__stbi__png_is16(&result, _s)
    return result
}
stbi__bmp_test :: (_s: &stbi__context) -> i32 {
    result : i32 = default
    __c__stbi__bmp_test(&result, _s)
    return result
}
stbi__bmp_load :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info) -> &void {
    result : &void = default
    __c__stbi__bmp_load(&result, _s, _x, _y, _comp, _req_comp, _ri)
    return result
}
stbi__bmp_info :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32) -> i32 {
    result : i32 = default
    __c__stbi__bmp_info(&result, _s, _x, _y, _comp)
    return result
}
stbi__tga_test :: (_s: &stbi__context) -> i32 {
    result : i32 = default
    __c__stbi__tga_test(&result, _s)
    return result
}
stbi__tga_load :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info) -> &void {
    result : &void = default
    __c__stbi__tga_load(&result, _s, _x, _y, _comp, _req_comp, _ri)
    return result
}
stbi__tga_info :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32) -> i32 {
    result : i32 = default
    __c__stbi__tga_info(&result, _s, _x, _y, _comp)
    return result
}
stbi__psd_test :: (_s: &stbi__context) -> i32 {
    result : i32 = default
    __c__stbi__psd_test(&result, _s)
    return result
}
stbi__psd_load :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info, _bpc: i32) -> &void {
    result : &void = default
    __c__stbi__psd_load(&result, _s, _x, _y, _comp, _req_comp, _ri, _bpc)
    return result
}
stbi__psd_info :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32) -> i32 {
    result : i32 = default
    __c__stbi__psd_info(&result, _s, _x, _y, _comp)
    return result
}
stbi__psd_is16 :: (_s: &stbi__context) -> i32 {
    result : i32 = default
    __c__stbi__psd_is16(&result, _s)
    return result
}
stbi__hdr_test :: (_s: &stbi__context) -> i32 {
    result : i32 = default
    __c__stbi__hdr_test(&result, _s)
    return result
}
stbi__hdr_load :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info) -> &f32 {
    result : &f32 = default
    __c__stbi__hdr_load(&result, _s, _x, _y, _comp, _req_comp, _ri)
    return result
}
stbi__hdr_info :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32) -> i32 {
    result : i32 = default
    __c__stbi__hdr_info(&result, _s, _x, _y, _comp)
    return result
}
stbi__pic_test :: (_s: &stbi__context) -> i32 {
    result : i32 = default
    __c__stbi__pic_test(&result, _s)
    return result
}
stbi__pic_load :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info) -> &void {
    result : &void = default
    __c__stbi__pic_load(&result, _s, _x, _y, _comp, _req_comp, _ri)
    return result
}
stbi__pic_info :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32) -> i32 {
    result : i32 = default
    __c__stbi__pic_info(&result, _s, _x, _y, _comp)
    return result
}
stbi__gif_test :: (_s: &stbi__context) -> i32 {
    result : i32 = default
    __c__stbi__gif_test(&result, _s)
    return result
}
stbi__gif_load :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info) -> &void {
    result : &void = default
    __c__stbi__gif_load(&result, _s, _x, _y, _comp, _req_comp, _ri)
    return result
}
stbi__load_gif_main :: (_s: &stbi__context, _delays: &&i32, _x: &i32, _y: &i32, _z: &i32, _comp: &i32, _req_comp: i32) -> &void {
    result : &void = default
    __c__stbi__load_gif_main(&result, _s, _delays, _x, _y, _z, _comp, _req_comp)
    return result
}
stbi__gif_info :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32) -> i32 {
    result : i32 = default
    __c__stbi__gif_info(&result, _s, _x, _y, _comp)
    return result
}
stbi__pnm_test :: (_s: &stbi__context) -> i32 {
    result : i32 = default
    __c__stbi__pnm_test(&result, _s)
    return result
}
stbi__pnm_load :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info) -> &void {
    result : &void = default
    __c__stbi__pnm_load(&result, _s, _x, _y, _comp, _req_comp, _ri)
    return result
}
stbi__pnm_info :: (_s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32) -> i32 {
    result : i32 = default
    __c__stbi__pnm_info(&result, _s, _x, _y, _comp)
    return result
}
stbi__ldr_to_hdr :: (_data: &stbi_uc, _x: i32, _y: i32, _comp: i32) -> &f32 {
    result : &f32 = default
    __c__stbi__ldr_to_hdr(&result, _data, _x, _y, _comp)
    return result
}
stbi__hdr_to_ldr :: (_data: &f32, _x: i32, _y: i32, _comp: i32) -> &stbi_uc {
    result : &stbi_uc = default
    __c__stbi__hdr_to_ldr(&result, _data, _x, _y, _comp)
    return result
}

// ==========================================================
// ==========================================================
// ==========================================================

#file_scope

__c__stbi__refill_buffer :: (_s: &stbi__context);
__c__stbi__jpeg_test :: (ret: &i32, _s: &stbi__context);
__c__stbi__jpeg_load :: (ret: &&void, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info);
__c__stbi__jpeg_info :: (ret: &i32, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32);
__c__stbi__png_test :: (ret: &i32, _s: &stbi__context);
__c__stbi__png_load :: (ret: &&void, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info);
__c__stbi__png_info :: (ret: &i32, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32);
__c__stbi__png_is16 :: (ret: &i32, _s: &stbi__context);
__c__stbi__bmp_test :: (ret: &i32, _s: &stbi__context);
__c__stbi__bmp_load :: (ret: &&void, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info);
__c__stbi__bmp_info :: (ret: &i32, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32);
__c__stbi__tga_test :: (ret: &i32, _s: &stbi__context);
__c__stbi__tga_load :: (ret: &&void, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info);
__c__stbi__tga_info :: (ret: &i32, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32);
__c__stbi__psd_test :: (ret: &i32, _s: &stbi__context);
__c__stbi__psd_load :: (ret: &&void, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info, _bpc: i32);
__c__stbi__psd_info :: (ret: &i32, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32);
__c__stbi__psd_is16 :: (ret: &i32, _s: &stbi__context);
__c__stbi__hdr_test :: (ret: &i32, _s: &stbi__context);
__c__stbi__hdr_load :: (ret: &&f32, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info);
__c__stbi__hdr_info :: (ret: &i32, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32);
__c__stbi__pic_test :: (ret: &i32, _s: &stbi__context);
__c__stbi__pic_load :: (ret: &&void, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info);
__c__stbi__pic_info :: (ret: &i32, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32);
__c__stbi__gif_test :: (ret: &i32, _s: &stbi__context);
__c__stbi__gif_load :: (ret: &&void, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info);
__c__stbi__load_gif_main :: (ret: &&void, _s: &stbi__context, _delays: &&i32, _x: &i32, _y: &i32, _z: &i32, _comp: &i32, _req_comp: i32);
__c__stbi__gif_info :: (ret: &i32, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32);
__c__stbi__pnm_test :: (ret: &i32, _s: &stbi__context);
__c__stbi__pnm_load :: (ret: &&void, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32, _req_comp: i32, _ri: &stbi__result_info);
__c__stbi__pnm_info :: (ret: &i32, _s: &stbi__context, _x: &i32, _y: &i32, _comp: &i32);
__c__stbi__ldr_to_hdr :: (ret: &&f32, _data: &stbi_uc, _x: i32, _y: i32, _comp: i32);
__c__stbi__hdr_to_ldr :: (ret: &&stbi_uc, _data: &f32, _x: i32, _y: i32, _comp: i32);
